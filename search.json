[{"path":"https://josesamos.github.io/geodimension/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 geodimension authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://josesamos.github.io/geodimension/articles/geodimension.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"geodimension: Definition of Geographic Dimensions","text":"multidimensional data model defined aim supporting data analysis. multidimensional systems, data structured facts dimensions1. geographic dimension plays fundamental role multidimensional systems. Apart analysis possibilities offers, like dimension, interesting possibility representing reports obtained multidimensional systems, using geographic dimensions map, performing spatial analysis . functionality supported packages rolap geomultistar. define geographic dimension star schema, need table attributes corresponding levels dimension. Additionally, also need one geographic layers represent data using dimension. can obtain data available vector layers geographic information. simple cases, one layer enough. often need several layers related . relationships can defined common attribute values can inferred respective geographic information. main objective package support definition geographic dimensions layers geographic information can used multidimensional systems. particular, packages rolap geomultistar. rest document structured follows: First, illustrative example package works developed. , document ends conclusions.","code":""},{"path":"https://josesamos.github.io/geodimension/articles/geodimension.html","id":"an-illustrative-example","dir":"Articles","previous_headings":"","what":"An illustrative example","title":"geodimension: Definition of Geographic Dimensions","text":"Suppose multidimensional design US data geographic dimension defined place level. place name code state located. interesting levels detail dimension able perform roll-operations. objective, look layers geographic information. United States Census Bureau find layers various levels detail, including place, county state. Furthermore find relationships table form division, region country. example obtain package (read GeoPackage format using sf package). content variable us_division shown . layers table related . cases attributes common, others, although relationship, may explicitly defined. can use geodimension support definition relationships. defined, also offer us support exploit obtain information . Thus, three phases can distinguished: Definition levels. Definition relationships. Obtaining information.","code":"library(geodimension)  layer_us_place <- gd_us |>   get_level_layer(\"place\")  layer_us_county <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"county\"),     get_level_layer(gd_us, \"county\"),     by = c(\"geoid\", \"statefp\", \"name\", \"type\")   ) |>   sf::st_as_sf()  layer_us_state <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"state\"),     get_level_layer(gd_us, \"state\"),     by = c(\"statefp\", \"division\", \"region\", \"stusps\", \"name\")   ) |>   sf::st_as_sf()"},{"path":"https://josesamos.github.io/geodimension/articles/geodimension.html","id":"definition-of-levels","dir":"Articles","previous_headings":"An illustrative example","what":"Definition of levels","title":"geodimension: Definition of Geographic Dimensions","text":"package, conceptual level geographical dimension called geolevel. define geolevel, need layer set attributes make layer’s key (uniquely identify instances). can previously check set attributes form key layer using check_key() function. might expect place name (name) state code (statefp) sufficient identify place, however, . check geoid field valid key, therefore, one use define geolevel. can check geometry considered definition level means get_geometry() function (simplifies types point, line polygon). addition, give level name able refer , shown . county place, name code state compose valid key. case, geometry polygon. Additionally, layer another geometry can associated using add_geometry() function. Since layer includes longitude latitude, can generate geographic layer points using coordinates_to_geometry() function. state situation similar previous cases. county state, fields longitude latitude available. polygon geometry, can obtain point geometry using complete_point_geometry() function. rest levels, layer specific geographic information, can obtain previous layers. definition levels. division region, define level data table. Using add_geometry() function, add layer geographic information obtained finer granularity level detail, contains field relates . Finally, obtain point type geometry previously defined polygon geometry. country, since state layer contain field directly relates , using get_level_layer() function, can obtain new layer previously defined levels. levels defined, define dimension relationships levels.","code":"names(layer_us_place) #> [1] \"geoid\"        \"statefp\"      \"county_geoid\" \"name\"         \"type\"         #> [6] \"geom\"  check_key(layer_us_place, key = c(\"name\", \"statefp\")) #> [1] FALSE  check_key(layer_us_place, key = \"geoid\") #> [1] TRUE get_geometry(layer_us_place) #> [1] \"point\"  place <-   geolevel(name = \"place\",            layer = layer_us_place,            key = \"geoid\") check_key(layer_us_county, key = c(\"name\", \"statefp\")) #> [1] FALSE  check_key(layer_us_county, key = \"geoid\") #> [1] TRUE  get_geometry(layer_us_county) #> [1] \"polygon\"  county <-   geolevel(name = \"county\",            layer = layer_us_county,            key = c(\"geoid\")) |>   add_geometry(coordinates_to_geometry(layer_us_county)) us_state_point <-   coordinates_to_geometry(layer_us_state,                           lon_lat = c(\"intptlon\", \"intptlat\"))  state <-   geolevel(name = \"state\",            layer = layer_us_state,            key = \"statefp\") |>   add_geometry(layer = us_state_point) division <-   geolevel(     name = \"division\",     layer = us_division,     attributes = c(\"country\", \"region_code\", \"division_name\"),     key = \"division_code\"   ) |>   add_geometry(layer = layer_us_state,                layer_key = \"division\") |>   complete_point_geometry()  region <-   geolevel(     name = \"region\",     layer = us_division,     attributes = c(\"country\", \"region_name\"),     key = \"region_code\"   ) |>   add_geometry(layer = layer_us_state,                layer_key = \"region\") |>   complete_point_geometry() country <-   geolevel(     name = \"country\",     layer = get_level_layer(region),     attributes = \"country\",     key = \"country\"   ) |>   complete_point_geometry()"},{"path":"https://josesamos.github.io/geodimension/articles/geodimension.html","id":"definition-of-relationships","dir":"Articles","previous_headings":"An illustrative example","what":"Definition of relationships","title":"geodimension: Definition of Geographic Dimensions","text":"define geodimension, give name start geolevel. want names follow snake case criteria, can indicate using snake_case = TRUE parameter conversion performed automatically operations. Next, add rest geolevels order. Next, can define relationships want consider levels. relationship two parts, lower level upper level. define relationships, following points must taken account: restrictions relationships define, long relationship can established. necessary define direct relationships (, indirect ones derived). Relationships can defined using attributes common values levels geographic relationships instances. want reference upper level attributes, must form valid key level (necessarily key indicated defining , used default). define relationship using geographic properties, upper level must type polygon. relationships state, region, division country defined . relationship state division defined state attribute (division) matches division key. way, relationships division region, region country defined. addition relationships relationship place state also county state. cases can defined attributes. case, attributes establish relationships. cases, can resort geographical relationships exist levels. example, relate place county, using relate_levels() function parameter by_geography = TRUE, field created lowest level reflects geographical relationship obtained. can check instances related using get_unrelated_instances() function: Since unrelated instances, instance place linked county whose boundaries contain . operations defined geodimension.","code":"gd <-   geodimension(name = \"gd_us\",                level = region,                snake_case = TRUE) |>   add_level(division) |>   add_level(state) |>   add_level(country) |>   add_level(place) |>   add_level(county) gd <- gd |>   relate_levels(     lower_level_name = \"state\",     lower_level_attributes = \"division\",     upper_level_name = \"division\"   ) |>   relate_levels(     lower_level_name = \"division\",     lower_level_attributes = \"region_code\",     upper_level_name = \"region\"   ) |>   relate_levels(     lower_level_name = \"region\",     lower_level_attributes = \"country\",     upper_level_name = \"country\"   ) gd <- gd |>   relate_levels(     lower_level_name = \"place\",     lower_level_attributes = \"county_geoid\",     upper_level_name = \"county\"   ) |>   relate_levels(     lower_level_name = \"county\",     lower_level_attributes = \"statefp\",     upper_level_name = \"state\"   ) gd_2 <- gd |>   relate_levels(lower_level_name = \"place\",                 upper_level_name = \"county\",                 by_geography = TRUE) nrow(get_unrelated_instances(gd_2,                              lower_level_name = \"place\",                              upper_level_name = \"county\")) #> [1] 0"},{"path":"https://josesamos.github.io/geodimension/articles/geodimension.html","id":"obtaining-information","dir":"Articles","previous_headings":"An illustrative example","what":"Obtaining information","title":"geodimension: Definition of Geographic Dimensions","text":"geodimension can obtain information table layer format, define geographic dimension star schema. can also define new versions dimension. can consult levels geodimension using following function: new geodimension defined selecting subset levels, want take account obtaining information, define new dimensions. necessary, relationships generated selected levels: indirect relationships defined longer exist levels deleted. level geodimension, data table can obtained includes data level data inherited higher levels. level can indicate whether prefix added identify origin fields. default added, can see . Previously, need , can obtain name levels level inherit attributes. need part data, example, instead places cities, can get table, modify set modify level. case filtered , can also modify, delete add attributes: checked key foreign keys still defined new table. level can obtain available geometries layer attribute configuration want selected geometry.  can obtain table level data geographic data represented form points, longitude latitude, included tools use format. addition functions, package offers possibility change CRS layers geodimension using transform_crs() function.","code":"gd |>   get_level_names() #> [1] \"country\"  \"county\"   \"division\" \"place\"    \"region\"   \"state\" gds <- gd |>   select_levels(level_names = c(\"state\", \"division\", \"region\", \"country\"))  gds |>   get_level_names() #> [1] \"country\"  \"division\" \"region\"   \"state\" ld <- gd |>   get_level_data(level_name = \"state\") names(ld) #> [1] \"statefp\"  \"division\" \"region\"   \"stusps\"   \"name\"     \"intptlon\" \"intptlat\"  ld <- gd |>   get_level_data(level_name = \"state\",                  inherited = TRUE) names(ld) #>  [1] \"statefp\"              \"state_division\"       \"state_region\"         #>  [4] \"state_stusps\"         \"state_name\"           \"state_intptlon\"       #>  [7] \"state_intptlat\"       \"division_country\"     \"division_region_code\" #> [10] \"division_name\"        \"region_country\"       \"region_name\" gd |>   get_higher_level_names(level_name = \"state\",                          indirect_levels = TRUE) #> [1] \"division\" \"region\"   \"country\" ld_place <- gd |>   get_level_data(level_name = \"place\") nrow(ld_place) #> [1] 31909  ld_place <- ld_place |>   dplyr::filter(type == \"city\")  gd <- gd |>   set_level_data(level_name = \"place\",                  data = ld_place) ld_place_2 <- gd |>   get_level_data(level_name = \"place\") nrow(ld_place_2) #> [1] 10193 gd |>   get_level_geometries(level_name = \"division\") #> [1] \"point\"   \"polygon\"  ll <- gd |>   get_level_layer(level_name = \"division\",                   geometry = \"polygon\",                   only_key = TRUE)  plot(sf::st_shift_longitude(ll)) ld_geo <- gd |>   get_level_data_geo(level_name = \"division\")  pander::pandoc.table(ld_geo, split.table = Inf)"},{"path":"https://josesamos.github.io/geodimension/articles/geodimension.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"geodimension: Definition of Geographic Dimensions","text":"geographic dimension relevant multidimensional systems. can enrich basic geographic dimension information available vector layers, generally, need several layers. Relationships layers can established attributes geographic relationships instances. definition relationships can systematized part intended package. Additionally, geodimension defined, support package, can easily obtain attribute table attributes levels want (need ), also layers associated geographic information.","code":""},{"path":"https://josesamos.github.io/geodimension/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jose Samos. Author, maintainer. Universidad de Granada. Copyright holder.","code":""},{"path":"https://josesamos.github.io/geodimension/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Samos J (2024). geodimension: Definition Geographic Dimensions. R package version 2.0.0.9000,  https://github.com/josesamos/geodimension, https://josesamos.github.io/geodimension/.","code":"@Manual{,   title = {geodimension: Definition of Geographic Dimensions},   author = {Jose Samos},   year = {2024},   note = {R package version 2.0.0.9000,  https://github.com/josesamos/geodimension},   url = {https://josesamos.github.io/geodimension/}, }"},{"path":"https://josesamos.github.io/geodimension/index.html","id":"geodimension-","dir":"","previous_headings":"","what":"Definition of Geographic Dimensions","title":"Definition of Geographic Dimensions","text":"geographic dimension plays fundamental role multidimensional systems. define geographic dimension multidimensional star schema, need table attributes corresponding levels dimension. Additionally, also need one geographic layers represent data using dimension. can obtain data available vector layers geographic information. simple cases, one layer enough. often need several layers related . relationships can defined common attribute values can inferred respective geographic information. goal geodimension support definition geographic dimensions layers geographic information can used multidimensional systems. particular, packages rolap geomultistar.","code":""},{"path":"https://josesamos.github.io/geodimension/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Definition of Geographic Dimensions","text":"can install released version geodimension CRAN : development version GitHub :","code":"install.packages(\"geodimension\") # install.packages(\"devtools\") devtools::install_github(\"josesamos/geodimension\")"},{"path":"https://josesamos.github.io/geodimension/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Definition of Geographic Dimensions","text":"basic example shows generate geodimension tables vector layers geographic information. also shows use . Suppose , US, want define geographic dimension state level also include information predefined higher organization levels: division, region country, available package us_division variable, shown . United States Census Bureau find layers various levels detail, including state. get geographic layer state level (layer_us_state). example obtain package (read GeoPackage format using sf package).  can define levels. layer, define geolevel. define geodimension includes levels interested. Next, define relationships exist levels: based common attributes, others geographic relationships instances. restrictions relationships define, long relationship can established. operations defined geodimension. can obtain data table define dimension star schema layer layers associated table level need. can also get table latitude longitude defined fields. need data another level detail, can obtain similar way.  addition functions, package offers support functions aid definition levels (example, determine key attributes layer), relate instances levels whose relationship immediately established, configure geodimension obtain customized output. example, can obtain table level data geographic data represented form points, longitude latitude, included tools use format.","code":"library(geodimension)  layer_us_state <- gd_us |>   get_level_layer(\"state\")  plot(sf::st_shift_longitude(sf::st_geometry(layer_us_state))) state <-   geolevel(name = \"state\",            layer = layer_us_state,            key = \"statefp\")  division <-   geolevel(     name = \"division\",     layer = us_division,     attributes = c(\"country\", \"region_code\", \"division_name\"),     key = \"division_code\"   ) |>   add_geometry(layer = layer_us_state,                layer_key = \"division\")  region <-   geolevel(     name = \"region\",     layer = us_division,     attributes = c(\"country\", \"region_name\"),     key = \"region_code\"   ) |>   add_geometry(layer = layer_us_state,                layer_key = \"region\")  country <-   geolevel(     name = \"country\",     layer = get_level_layer(region),     attributes = \"country\",     key = \"country\"   ) gd <-   geodimension(name = \"gd_us\",                level = state,                snake_case = TRUE) |>   add_level(level = division) |>   add_level(level = region) |>   add_level(level = country) gd <- gd |>   relate_levels(     lower_level_name = \"state\",     lower_level_attributes = \"division\",     upper_level_name = \"division\"   ) |>   relate_levels(     lower_level_name = \"division\",     upper_level_name = \"region\",     by_geography = TRUE   ) |>   relate_levels(     lower_level_name = \"region\",     lower_level_attributes = \"country\",     upper_level_name = \"country\"   ) ld <- gd |>   get_level_data(level_name = \"division\") names(ld) #> [1] \"division_code\"  \"country\"        \"region_code\"    \"division_name\"  #> [5] \"fk_region_code\"  ld <- gd |>   get_level_data(level_name = \"division\",                  inherited = TRUE) names(ld) #> [1] \"division_code\"           \"division_country\"        #> [3] \"division_region_code\"    \"division_name\"           #> [5] \"division_fk_region_code\" \"region_country\"          #> [7] \"region_name\"  ll <- gd |>   get_level_layer(level_name = \"division\",                  inherited = TRUE) names(ll) #> [1] \"division_code\"           \"division_country\"        #> [3] \"division_region_code\"    \"division_name\"           #> [5] \"division_fk_region_code\" \"region_country\"          #> [7] \"region_name\"             \"geom\"  lg <- gd |>   get_level_data_geo(level_name = \"division\",                      inherited = TRUE) names(lg) #> [1] \"division_code\"           \"division_country\"        #> [3] \"division_region_code\"    \"division_name\"           #> [5] \"division_fk_region_code\" \"region_country\"          #> [7] \"region_name\"             \"intptlon\"                #> [9] \"intptlat\" ld <- gd |>   get_level_data(level_name = \"region\",                  inherited = TRUE) names(ld) #> [1] \"region_code\"    \"region_country\" \"region_name\"  ll <- gd |>   get_level_layer(level_name = \"region\",                   only_key = TRUE)  plot(sf::st_shift_longitude(ll)) ld_geo <- gd |>   get_level_data_geo(level_name = \"region\")  pander::pandoc.table(ld_geo, split.table = Inf)"},{"path":"https://josesamos.github.io/geodimension/reference/add_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Add geometry to a level — add_geometry","title":"Add geometry to a level — add_geometry","text":"level can several geometries (point polygon). function adds geometry layer level.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/add_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add geometry to a level — add_geometry","text":"","code":"add_geometry(gl, layer, layer_key, level_key)  # S3 method for geolevel add_geometry(gl, layer = NULL, layer_key = NULL, level_key = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/add_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add geometry to a level — add_geometry","text":"gl geolevel object. layer sf object. layer_key vector string. level_key vector string.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/add_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add geometry to a level — add_geometry","text":"geolevel.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/add_geometry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add geometry to a level — add_geometry","text":"association geometry existing instances done join using level layer keys. none indicated, default key defined level considered.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/add_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add geometry to a level — add_geometry","text":"","code":"layer_us_state <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"state\"),     get_level_layer(gd_us, \"state\"),     by = c(\"statefp\", \"division\", \"region\", \"stusps\", \"name\")   ) |>   sf::st_as_sf()  us_state_point <-   coordinates_to_geometry(layer_us_state,                           lon_lat = c(\"intptlon\", \"intptlat\"))  state <-   geolevel(name = \"state\",            layer = layer_us_state,            key = \"statefp\",            snake_case = TRUE) |>   add_geometry(layer = us_state_point)"},{"path":"https://josesamos.github.io/geodimension/reference/add_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a level to a dimension — add_level","title":"Add a level to a dimension — add_level","text":"level part dimension, can related levels dimension.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/add_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a level to a dimension — add_level","text":"","code":"add_level(gd, level)  # S3 method for geodimension add_level(gd, level = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/add_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a level to a dimension — add_level","text":"gd geodimension object. level geolevel, level add dimension.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/add_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a level to a dimension — add_level","text":"geodimension.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/add_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a level to a dimension — add_level","text":"","code":"layer_us_place <- gd_us |>   get_level_layer(\"place\")  layer_us_county <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"county\"),     get_level_layer(gd_us, \"county\"),     by = c(\"geoid\", \"statefp\", \"name\", \"type\")   ) |>   sf::st_as_sf()  place <-   geolevel(name = \"place\",            layer = layer_us_place,            attributes = c(\"statefp\", \"county_geoid\", \"name\", \"type\"),            key = \"geoid\")  county <-   geolevel(     name = \"county\",     layer = layer_us_county,     attributes = c(\"statefp\", \"name\", \"type\"),     key = \"geoid\"   ) |>   add_geometry(coordinates_to_geometry(layer_us_county,                                        lon_lat = c(\"intptlon\", \"intptlat\")))  gd_us <-   geodimension(name = \"gd_us\",                level = place) |>   add_level(level = county)"},{"path":"https://josesamos.github.io/geodimension/reference/add_prefix.html","id":null,"dir":"Reference","previous_headings":"","what":"Add prefix — add_prefix","title":"Add prefix — add_prefix","text":"Add prefix","code":""},{"path":"https://josesamos.github.io/geodimension/reference/add_prefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add prefix — add_prefix","text":"","code":"add_prefix(str, prefix)"},{"path":"https://josesamos.github.io/geodimension/reference/add_prefix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add prefix — add_prefix","text":"str string. prefix string.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/add_prefix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add prefix — add_prefix","text":"string.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/all_attributes_character.html","id":null,"dir":"Reference","previous_headings":"","what":"All attributes are character — all_attributes_character","title":"All attributes are character — all_attributes_character","text":"attributes character","code":""},{"path":"https://josesamos.github.io/geodimension/reference/all_attributes_character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All attributes are character — all_attributes_character","text":"","code":"all_attributes_character(instances)"},{"path":"https://josesamos.github.io/geodimension/reference/all_attributes_character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All attributes are character — all_attributes_character","text":"instances tibble.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/all_attributes_character.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All attributes are character — all_attributes_character","text":"tibble.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/check_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check key — check_key","title":"Check key — check_key","text":"Check specified set attributes can key table.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/check_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check key — check_key","text":"","code":"check_key(table, key = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/check_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check key — check_key","text":"table tibble object. key vector, attributes compose key.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/check_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check key — check_key","text":"boolean.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/check_key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check key — check_key","text":"table can data table vector layer.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/check_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check key — check_key","text":"","code":"layer_us_county <- get_level_layer(gd_us, \"county\")  is_key <- check_key(layer_us_county, key = c(\"statefp\", \"name\"))"},{"path":"https://josesamos.github.io/geodimension/reference/complete_point_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete point geometry — complete_point_geometry","title":"Complete point geometry — complete_point_geometry","text":"case polygon geometry defined, obtains point geometry .","code":""},{"path":"https://josesamos.github.io/geodimension/reference/complete_point_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete point geometry — complete_point_geometry","text":"","code":"complete_point_geometry(gl)  # S3 method for geolevel complete_point_geometry(gl)"},{"path":"https://josesamos.github.io/geodimension/reference/complete_point_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete point geometry — complete_point_geometry","text":"gl geolevel object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/complete_point_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete point geometry — complete_point_geometry","text":"geolevel object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/complete_point_geometry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete point geometry — complete_point_geometry","text":"point geometry already defined, instances geometry empty, completes .","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/complete_point_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete point geometry — complete_point_geometry","text":"","code":"layer_us_state <- get_level_layer(gd_us, \"state\")  state <-   geolevel(name = \"state\",            layer = layer_us_state,            key = \"statefp\",            snake_case = TRUE) |>   complete_point_geometry()"},{"path":"https://josesamos.github.io/geodimension/reference/complete_relation_by_geography.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete relation by geography — complete_relation_by_geography","title":"Complete relation by geography — complete_relation_by_geography","text":"Two levels can related attributes geography (upper level polygon-type geometry). related, unrelated instances, can try relate instances using function, considers alternative geographic relationships.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/complete_relation_by_geography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete relation by geography — complete_relation_by_geography","text":"","code":"complete_relation_by_geography(   gd,   lower_level_name = NULL,   upper_level_name = NULL )  # S3 method for geodimension complete_relation_by_geography(   gd,   lower_level_name = NULL,   upper_level_name = NULL )"},{"path":"https://josesamos.github.io/geodimension/reference/complete_relation_by_geography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete relation by geography — complete_relation_by_geography","text":"gd geodimension object. lower_level_name string, name lower level. upper_level_name string, name upper lever.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/complete_relation_by_geography.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete relation by geography — complete_relation_by_geography","text":"geodimension object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/complete_relation_by_geography.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete relation by geography — complete_relation_by_geography","text":"necessarily succeed trying relate instances.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/complete_relation_by_geography.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete relation by geography — complete_relation_by_geography","text":"","code":"layer_us_place <- gd_us |>   get_level_layer(\"place\")  layer_us_county <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"county\"),     get_level_layer(gd_us, \"county\"),     by = c(\"geoid\", \"statefp\", \"name\", \"type\")   ) |>   sf::st_as_sf()  place <-   geolevel(name = \"place\",            layer = layer_us_place,            attributes = c(\"statefp\", \"county_geoid\", \"name\", \"type\"),            key = \"geoid\")  county <-   geolevel(     name = \"county\",     layer = layer_us_county,     attributes = c(\"statefp\", \"name\", \"type\"),     key = \"geoid\"   ) |>   add_geometry(coordinates_to_geometry(layer_us_county,                                        lon_lat = c(\"intptlon\", \"intptlat\")))  gd <-   geodimension(name = \"gd_us\",                level = place) |>   add_level(level = county)  gd <- gd |>   relate_levels(     lower_level_name = \"place\",     lower_level_attributes = \"county_geoid\",     upper_level_name = \"county\"   ) |>   complete_relation_by_geography(     lower_level_name = \"place\",     upper_level_name = \"county\"   )"},{"path":"https://josesamos.github.io/geodimension/reference/coordinates_to_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform coordinates to point geometry — coordinates_to_geometry","title":"Transform coordinates to point geometry — coordinates_to_geometry","text":"coordinates defined fields latitude longitude, returns layer points.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/coordinates_to_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform coordinates to point geometry — coordinates_to_geometry","text":"","code":"coordinates_to_geometry(table, lon_lat = c(\"intptlon\", \"intptlat\"), crs = 4326)"},{"path":"https://josesamos.github.io/geodimension/reference/coordinates_to_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform coordinates to point geometry — coordinates_to_geometry","text":"table tibble object. lon_lat vector, name longitude latitude attributes. crs coordinate reference system: integer EPSG code, character proj4string.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/coordinates_to_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform coordinates to point geometry — coordinates_to_geometry","text":"sf object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/coordinates_to_geometry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform coordinates to point geometry — coordinates_to_geometry","text":"start geographic layer, initially transforms table. CRS new layer indicated. default, considers 4326 (WGS84).","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/coordinates_to_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform coordinates to point geometry — coordinates_to_geometry","text":"","code":"layer_us_county <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"county\"),     get_level_layer(gd_us, \"county\"),     by = c(\"geoid\", \"statefp\", \"name\", \"type\")   ) |>   sf::st_as_sf()  us_county_point <-   coordinates_to_geometry(layer_us_county,                           lon_lat = c(\"intptlon\", \"intptlat\"))"},{"path":"https://josesamos.github.io/geodimension/reference/define_relationship.html","id":null,"dir":"Reference","previous_headings":"","what":"define relationship — define_relationship","title":"define relationship — define_relationship","text":"define relationship","code":""},{"path":"https://josesamos.github.io/geodimension/reference/define_relationship.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"define relationship — define_relationship","text":"","code":"define_relationship(gd, gdp, l, h)"},{"path":"https://josesamos.github.io/geodimension/reference/define_relationship.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"define relationship — define_relationship","text":"gd geolevel object. gdp geolevel object. l string, name lower level. h string, name upper lever.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/define_relationship.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"define relationship — define_relationship","text":"geolevel object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/gd_es.html","id":null,"dir":"Reference","previous_headings":"","what":"gd_es — gd_es","title":"gd_es — gd_es","text":"geodimension obtained vector layers Spain","code":""},{"path":"https://josesamos.github.io/geodimension/reference/gd_es.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gd_es — gd_es","text":"","code":"gd_es"},{"path":"https://josesamos.github.io/geodimension/reference/gd_es.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gd_es — gd_es","text":"geodimension.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/gd_es.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"gd_es — gd_es","text":"https://centrodedescargas.cnig.es/CentroDescargas/, https://www.mapa.gob.es/es/cartografia-y-sig/ide/descargas/agricultura/default.aspx","code":""},{"path":"https://josesamos.github.io/geodimension/reference/gd_es.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gd_es — gd_es","text":"includes levels nucleus, municipality, agricultural region, province, autonomous community country.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/gd_us.html","id":null,"dir":"Reference","previous_headings":"","what":"gd_us — gd_us","title":"gd_us — gd_us","text":"geodimension obtained vector layers USA.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/gd_us.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gd_us — gd_us","text":"","code":"gd_us"},{"path":"https://josesamos.github.io/geodimension/reference/gd_us.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gd_us — gd_us","text":"geodimension.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/gd_us.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"gd_us — gd_us","text":"https://www.census.gov","code":""},{"path":"https://josesamos.github.io/geodimension/reference/gd_us.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gd_us — gd_us","text":"includes levels place, county, state, division, region country.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/geodimension.html","id":null,"dir":"Reference","previous_headings":"","what":"geodimension S3 class — geodimension","title":"geodimension S3 class — geodimension","text":"geodimension object created. geodimension allows us relate levels. addition name geodimension , level given.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/geodimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geodimension S3 class — geodimension","text":"","code":"geodimension(name = NULL, level = NULL, snake_case = FALSE)"},{"path":"https://josesamos.github.io/geodimension/reference/geodimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geodimension S3 class — geodimension","text":"name string, name dimension. level geolevel. snake_case boolean, transform names snake_case.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/geodimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geodimension S3 class — geodimension","text":"geodimension object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/geodimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geodimension S3 class — geodimension","text":"","code":"layer_us_place <- get_level_layer(gd_us, \"place\")  place <-   geolevel(name = \"place\",            layer = layer_us_place,            key = \"geoid\") gd <-   geodimension(name = \"gd_us\",                level = place)"},{"path":"https://josesamos.github.io/geodimension/reference/geolevel.html","id":null,"dir":"Reference","previous_headings":"","what":"geolevel S3 class — geolevel","title":"geolevel S3 class — geolevel","text":"geolevel object created given geographic layer. attributes layer included level can indicated; attribute indicated, considered. attributes make key must indicated.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/geolevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geolevel S3 class — geolevel","text":"","code":"geolevel(   name = NULL,   layer = NULL,   attributes = NULL,   key = NULL,   snake_case = FALSE )"},{"path":"https://josesamos.github.io/geodimension/reference/geolevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geolevel S3 class — geolevel","text":"name string, level name. layer tibble sf object. attributes string vector, selected attributes. key string vector, attributes compose key. snake_case boolean, transform names snake_case.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/geolevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geolevel S3 class — geolevel","text":"geolevel object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/geolevel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"geolevel S3 class — geolevel","text":"level can two associated geometries (point polygon). geometry obtained layer data. can also define level tibble, associated geometry. geometry obtained relationships levels define layers related data. name level used later reference relate levels.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/geolevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geolevel S3 class — geolevel","text":"","code":"layer_us_state <- get_level_layer(gd_us, \"state\")  state <-   geolevel(name = \"state\",            layer = layer_us_state,            key = \"statefp\",            snake_case = TRUE)"},{"path":"https://josesamos.github.io/geodimension/reference/get_empty_geometry_instances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get empty geometry instances — get_empty_geometry_instances","title":"Get empty geometry instances — get_empty_geometry_instances","text":"Get instances data table associated geometry specified geometry type.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_empty_geometry_instances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get empty geometry instances — get_empty_geometry_instances","text":"","code":"get_empty_geometry_instances(gl, geometry)  # S3 method for geolevel get_empty_geometry_instances(gl, geometry = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/get_empty_geometry_instances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get empty geometry instances — get_empty_geometry_instances","text":"gl geolevel object. geometry string, type geometry layer.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_empty_geometry_instances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get empty geometry instances — get_empty_geometry_instances","text":"tibble.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/get_empty_geometry_instances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get empty geometry instances — get_empty_geometry_instances","text":"","code":"layer_us_state <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"state\"),     get_level_layer(gd_us, \"state\"),     by = c(\"statefp\", \"division\", \"region\", \"stusps\", \"name\")   ) |>   sf::st_as_sf()  us_state_point <-   coordinates_to_geometry(layer_us_state,                           lon_lat = c(\"intptlon\", \"intptlat\"))  state <-   geolevel(name = \"state\",            layer = layer_us_state,            key = \"statefp\",            snake_case = TRUE) |>   add_geometry(layer = us_state_point)  empty_geometry_instances <- state |>   get_empty_geometry_instances(geometry = \"point\")"},{"path":"https://josesamos.github.io/geodimension/reference/get_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Get geometry — get_geometry","title":"Get geometry — get_geometry","text":"Get geometry layer, interpreted define geolevel object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get geometry — get_geometry","text":"","code":"get_geometry(layer)"},{"path":"https://josesamos.github.io/geodimension/reference/get_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get geometry — get_geometry","text":"layer sf object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get geometry — get_geometry","text":"string.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_geometry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get geometry — get_geometry","text":"valid one three geometries interpreted: point, line polygon.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/get_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get geometry — get_geometry","text":"","code":"layer_us_county <- get_level_layer(gd_us, \"county\")  geometry <- get_geometry(layer_us_county)"},{"path":"https://josesamos.github.io/geodimension/reference/get_higher_level_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get higher level names — get_higher_level_names","title":"Get higher level names — get_higher_level_names","text":"Get names levels included geodimension related given level upper levels. can get direct levels levels reached passing levels.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_higher_level_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get higher level names — get_higher_level_names","text":"","code":"get_higher_level_names(gd, level_name, indirect_levels)  # S3 method for geodimension get_higher_level_names(gd, level_name = NULL, indirect_levels = FALSE)"},{"path":"https://josesamos.github.io/geodimension/reference/get_higher_level_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get higher level names — get_higher_level_names","text":"gd geodimension object. level_name string. indirect_levels boolean.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_higher_level_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get higher level names — get_higher_level_names","text":"vector names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/get_higher_level_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get higher level names — get_higher_level_names","text":"","code":"ln_1 <- gd_us |>   get_higher_level_names(level_name = \"place\")  ln_2 <- gd_us |>   get_higher_level_names(level_name = \"place\", indirect_levels = TRUE)"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get level data — get_level_data","title":"Get level data — get_level_data","text":"Get data table given level.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get level data — get_level_data","text":"","code":"get_level_data(gd, level_name, inherited, add_prefix)  # S3 method for geodimension get_level_data(gd, level_name = NULL, inherited = FALSE, add_prefix = TRUE)"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get level data — get_level_data","text":"gd geodimension object. level_name string. inherited boolean. add_prefix boolean.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get level data — get_level_data","text":"tibble object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get level data — get_level_data","text":"allows selecting whether want data defined locally level also inherits higher levels related. case inheriting attributes levels, table, can prefix name level.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get level data — get_level_data","text":"","code":"ld <- gd_us |>   get_level_data(level_name = \"county\",                  inherited = TRUE)"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data_geo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get level data with latitude and longitude — get_level_data_geo","title":"Get level data with latitude and longitude — get_level_data_geo","text":"Get data table given level latitude longitude.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data_geo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get level data with latitude and longitude — get_level_data_geo","text":"","code":"get_level_data_geo(gd, level_name, inherited, add_prefix, lon_lat, crs)  # S3 method for geodimension get_level_data_geo(   gd,   level_name = NULL,   inherited = FALSE,   add_prefix = TRUE,   lon_lat = c(\"intptlon\", \"intptlat\"),   crs = 4326 )"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data_geo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get level data with latitude and longitude — get_level_data_geo","text":"gd geodimension object. level_name string. inherited boolean. add_prefix boolean. lon_lat vector, name longitude latitude attributes. crs coordinate reference system: integer EPSG code, character proj4string.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data_geo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get level data with latitude and longitude — get_level_data_geo","text":"tibble object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data_geo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get level data with latitude and longitude — get_level_data_geo","text":"allows selecting whether want data defined locally level also inherits higher levels related. case inheriting attributes levels, table, can prefix name level. Additionally, indicate names fields longitude latitude stored, well crs used, different default values.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/get_level_data_geo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get level data with latitude and longitude — get_level_data_geo","text":"","code":"ld <- gd_us |>   get_level_data_geo(level_name = \"county\",                      inherited = TRUE)"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_geometries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get level geometries — get_level_geometries","title":"Get level geometries — get_level_geometries","text":"Gets geometry types defined given level.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_geometries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get level geometries — get_level_geometries","text":"","code":"get_level_geometries(gd, level_name)  # S3 method for geodimension get_level_geometries(gd, level_name = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_geometries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get level geometries — get_level_geometries","text":"gd geodimension object. level_name string.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_geometries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get level geometries — get_level_geometries","text":"vector names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/get_level_geometries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get level geometries — get_level_geometries","text":"","code":"lg <- gd_us |>   get_level_geometries(level_name = \"state\")"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"get level keys — get_level_keys","title":"get level keys — get_level_keys","text":"Starting level, keys levels .","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get level keys — get_level_keys","text":"","code":"get_level_keys(gd, level_name = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get level keys — get_level_keys","text":"gd geolevel object. level_name string, name level.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get level keys — get_level_keys","text":"tibble object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Get level layer — get_level_layer","title":"Get level layer — get_level_layer","text":"Get geographic layer associated level. can select geometry , using boolean parameters, attributes included layer's table: attributes make key , applied geodimension, inherited attributes prefix level defined can added.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get level layer — get_level_layer","text":"","code":"get_level_layer(gd, level_name, geometry, only_key, inherited, add_prefix)  # S3 method for geodimension get_level_layer(   gd,   level_name = NULL,   geometry = NULL,   only_key = FALSE,   inherited = FALSE,   add_prefix = TRUE )  # S3 method for geolevel get_level_layer(   gd,   level_name = NULL,   geometry = NULL,   only_key = FALSE,   inherited = FALSE,   add_prefix = TRUE )"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get level layer — get_level_layer","text":"gd geolevel geodimension object. level_name string. geometry string. only_key boolean. inherited boolean. add_prefix boolean.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get level layer — get_level_layer","text":"sf object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/get_level_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get level layer — get_level_layer","text":"","code":"layer_us_state <- get_level_layer(gd_us, \"state\")  state <-   geolevel(name = \"state\",            layer = layer_us_state,            key = \"statefp\")  state_ll <- state |>   get_level_layer(\"polygon\")   county_ll <- gd_us |>   get_level_layer(level_name = \"county\",                   geometry = \"polygon\",                   inherited = TRUE)"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get level names — get_level_names","title":"Get level names — get_level_names","text":"Get names levels included geodimension.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get level names — get_level_names","text":"","code":"get_level_names(gd)  # S3 method for geodimension get_level_names(gd)"},{"path":"https://josesamos.github.io/geodimension/reference/get_level_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get level names — get_level_names","text":"gd geodimension object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_level_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get level names — get_level_names","text":"vector names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/get_level_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get level names — get_level_names","text":"","code":"ln <- gd_us |>   get_level_names()"},{"path":"https://josesamos.github.io/geodimension/reference/get_unrelated_instances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unrelated instances — get_unrelated_instances","title":"Get unrelated instances — get_unrelated_instances","text":"Given two previously related levels dimension, obtains instances lower level related upper level.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_unrelated_instances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unrelated instances — get_unrelated_instances","text":"","code":"get_unrelated_instances(gd, lower_level_name, upper_level_name)  # S3 method for geodimension get_unrelated_instances(gd, lower_level_name = NULL, upper_level_name = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/get_unrelated_instances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unrelated instances — get_unrelated_instances","text":"gd geodimension object. lower_level_name string, name lower level. upper_level_name string, name upper lever.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/get_unrelated_instances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unrelated instances — get_unrelated_instances","text":"tibble, unrelated lower level instances.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/get_unrelated_instances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get unrelated instances — get_unrelated_instances","text":"","code":"layer_us_place <- gd_us |>   get_level_layer(\"place\")  layer_us_county <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"county\"),     get_level_layer(gd_us, \"county\"),     by = c(\"geoid\", \"statefp\", \"name\", \"type\")   ) |>   sf::st_as_sf()  place <-   geolevel(name = \"place\",            layer = layer_us_place,            attributes = c(\"statefp\", \"county_geoid\", \"name\", \"type\"),            key = \"geoid\")  county <-   geolevel(     name = \"county\",     layer = layer_us_county,     attributes = c(\"statefp\", \"name\", \"type\"),     key = \"geoid\"   ) |>   add_geometry(coordinates_to_geometry(layer_us_county,                                        lon_lat = c(\"intptlon\", \"intptlat\")))  gd <-   geodimension(name = \"gd_us\",                level = place) |>   add_level(level = county)  gd <- gd |>   relate_levels(     lower_level_name = \"place\",     upper_level_name = \"county\",     by_geography = TRUE   )  ui <- gd |>   get_unrelated_instances(     lower_level_name = \"place\",     upper_level_name = \"county\"   )"},{"path":"https://josesamos.github.io/geodimension/reference/my_to_snake_case.html","id":null,"dir":"Reference","previous_headings":"","what":"To snake case — my_to_snake_case","title":"To snake case — my_to_snake_case","text":"snake case","code":""},{"path":"https://josesamos.github.io/geodimension/reference/my_to_snake_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To snake case — my_to_snake_case","text":"","code":"my_to_snake_case(str)"},{"path":"https://josesamos.github.io/geodimension/reference/my_to_snake_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To snake case — my_to_snake_case","text":"str string.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/my_to_snake_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To snake case — my_to_snake_case","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/relate_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Relate levels in a dimension — relate_levels","title":"Relate levels in a dimension — relate_levels","text":"Definition direct relationship two levels dimension: lower level composes higher level.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/relate_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relate levels in a dimension — relate_levels","text":"","code":"relate_levels(   gd,   lower_level_name,   lower_level_attributes,   upper_level_name,   upper_level_key,   by_geography )  # S3 method for geodimension relate_levels(   gd,   lower_level_name = NULL,   lower_level_attributes = NULL,   upper_level_name = NULL,   upper_level_key = NULL,   by_geography = FALSE )"},{"path":"https://josesamos.github.io/geodimension/reference/relate_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relate levels in a dimension — relate_levels","text":"gd geodimension object. lower_level_name string, name lower level. lower_level_attributes vector attribute names. upper_level_name string, name upper lever. upper_level_key vector attribute names. by_geography boolean.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/relate_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relate levels in a dimension — relate_levels","text":"geodimension.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/relate_levels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relate levels in a dimension — relate_levels","text":"relationship may exist attributes common values geographic attributes. latter case, geometry upper level must polygon type. top-level attributes indicated, attributes make key considered default, corresponding attributes lower level indicated. use geometric relationship, must explicitly indicated Boolean parameter. case, attributes lower level must exist table, added values key upper level, according established relationship. lower level attribute names provided, generated upper level key names, adding prefix.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/relate_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relate levels in a dimension — relate_levels","text":"","code":"layer_us_place <- gd_us |>   get_level_layer(\"place\")  layer_us_county <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"county\"),     get_level_layer(gd_us, \"county\"),     by = c(\"geoid\", \"statefp\", \"name\", \"type\")   ) |>   sf::st_as_sf()  place <-   geolevel(name = \"place\",            layer = layer_us_place,            attributes = c(\"statefp\", \"county_geoid\", \"name\", \"type\"),            key = \"geoid\")  county <-   geolevel(     name = \"county\",     layer = layer_us_county,     attributes = c(\"statefp\", \"name\", \"type\"),     key = \"geoid\"   ) |>   add_geometry(coordinates_to_geometry(layer_us_county,                                        lon_lat = c(\"intptlon\", \"intptlat\")))  gd <-   geodimension(name = \"gd_us\",                level = place) |>   add_level(level = county)  gd <- gd |>   relate_levels(     lower_level_name = \"place\",     lower_level_attributes = \"county_geoid\",     upper_level_name = \"county\"   )  gd_2 <- gd |>   relate_levels(     lower_level_name = \"place\",     upper_level_name = \"county\",     by_geography = TRUE   )"},{"path":"https://josesamos.github.io/geodimension/reference/select_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Select levels — select_levels","title":"Select levels — select_levels","text":"Select subset levels dimension rest levels longer belong .","code":""},{"path":"https://josesamos.github.io/geodimension/reference/select_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select levels — select_levels","text":"","code":"select_levels(gd, level_names = NULL)  # S3 method for geodimension select_levels(gd, level_names = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/select_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select levels — select_levels","text":"gd geodimension object. level_names vector names.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/select_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select levels — select_levels","text":"geodimension object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/select_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select levels — select_levels","text":"","code":"gd_us_2 <- gd_us |>   select_levels(level_names = c(\"state\", \"county\", \"place\", \"region\"))"},{"path":"https://josesamos.github.io/geodimension/reference/set_level_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Set level data — set_level_data","title":"Set level data — set_level_data","text":"Set data table given level.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/set_level_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set level data — set_level_data","text":"","code":"set_level_data(gd, level_name, data)  # S3 method for geodimension set_level_data(gd, level_name = NULL, data = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/set_level_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set level data — set_level_data","text":"gd geodimension object. level_name string. data tibble object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/set_level_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set level data — set_level_data","text":"geodimension object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/set_level_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set level data — set_level_data","text":"can get table, filter transform data redefine level table. checked attributes used relationships remain table.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/set_level_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set level data — set_level_data","text":"","code":"ld <- gd_us |>   get_level_data(level_name = \"county\",                  inherited = TRUE)  gd_us <- gd_us |>   set_level_data(level_name = \"county\",                  data = ld)"},{"path":"https://josesamos.github.io/geodimension/reference/snake_case_geolevel.html","id":null,"dir":"Reference","previous_headings":"","what":"snake case geolevel — snake_case_geolevel","title":"snake case geolevel — snake_case_geolevel","text":"snake case geolevel","code":""},{"path":"https://josesamos.github.io/geodimension/reference/snake_case_geolevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"snake case geolevel — snake_case_geolevel","text":"","code":"snake_case_geolevel(gl)"},{"path":"https://josesamos.github.io/geodimension/reference/snake_case_geolevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"snake case geolevel — snake_case_geolevel","text":"gl geolevel object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/snake_case_geolevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"snake case geolevel — snake_case_geolevel","text":"geolevel object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/sort_by_number_of_instances.html","id":null,"dir":"Reference","previous_headings":"","what":"sort by number of instances — sort_by_number_of_instances","title":"sort by number of instances — sort_by_number_of_instances","text":"sort number instances","code":""},{"path":"https://josesamos.github.io/geodimension/reference/sort_by_number_of_instances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sort by number of instances — sort_by_number_of_instances","text":"","code":"sort_by_number_of_instances(gd, level_names, decreasing = FALSE)"},{"path":"https://josesamos.github.io/geodimension/reference/sort_by_number_of_instances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sort by number of instances — sort_by_number_of_instances","text":"gd geolevel object. level_names string vector. decreasing boolean, decreasing order.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/sort_by_number_of_instances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sort by number of instances — sort_by_number_of_instances","text":"string vector.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/transform_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform CRS — transform_crs","title":"Transform CRS — transform_crs","text":"Transform CRS layers included dimension one indicated.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/transform_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform CRS — transform_crs","text":"","code":"transform_crs(gd, crs = NULL)  # S3 method for geodimension transform_crs(gd, crs = NULL)"},{"path":"https://josesamos.github.io/geodimension/reference/transform_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform CRS — transform_crs","text":"gd geodimension object. crs coordinate reference system: integer EPSG code, character proj4string.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/transform_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform CRS — transform_crs","text":"geodimension.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/reference/transform_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform CRS — transform_crs","text":"","code":"layer_us_place <- gd_us |>   get_level_layer(\"place\")  layer_us_county <-   dplyr::inner_join(     get_level_data_geo(gd_us, \"county\"),     get_level_layer(gd_us, \"county\"),     by = c(\"geoid\", \"statefp\", \"name\", \"type\")   ) |>   sf::st_as_sf()  place <-   geolevel(name = \"place\",            layer = layer_us_place,            attributes = c(\"statefp\", \"county_geoid\", \"name\", \"type\"),            key = \"geoid\")  county <-   geolevel(     name = \"county\",     layer = layer_us_county,     attributes = c(\"statefp\", \"name\", \"type\"),     key = \"geoid\"   ) |>   add_geometry(coordinates_to_geometry(layer_us_county,                                        lon_lat = c(\"intptlon\", \"intptlat\")))  gd_us <-   geodimension(name = \"gd_us\",                level = place) |>   add_level(level = county) |>   transform_crs(crs = 3857)"},{"path":"https://josesamos.github.io/geodimension/reference/us_division.html","id":null,"dir":"Reference","previous_headings":"","what":"us_division — us_division","title":"us_division — us_division","text":"US Divisions Regions (code name).","code":""},{"path":"https://josesamos.github.io/geodimension/reference/us_division.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"us_division — us_division","text":"","code":"us_division"},{"path":"https://josesamos.github.io/geodimension/reference/us_division.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"us_division — us_division","text":"tibble object.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/validate_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate names — validate_names","title":"Validate names — validate_names","text":"Validate names","code":""},{"path":"https://josesamos.github.io/geodimension/reference/validate_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate names — validate_names","text":"","code":"validate_names(defined_names, names, concept = \"name\", repeated = FALSE)"},{"path":"https://josesamos.github.io/geodimension/reference/validate_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate names — validate_names","text":"defined_names vector strings, defined attribute names. names vector strings, new attribute names. concept string, treated concept. repeated boolean, repeated names allowed.","code":""},{"path":"https://josesamos.github.io/geodimension/reference/validate_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate names — validate_names","text":"vector strings, names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geodimension/news/index.html","id":"geodimension-200","dir":"Changelog","previous_headings":"","what":"geodimension 2.0.0","title":"geodimension 2.0.0","text":"CRAN release: 2024-01-08 New datasets: level place instead city gd_us gd_es, geodimension Spain. Definition geographic information layers GeoPackage external data. New functions: set_level_data() get_level_data_geo(). Add parameter snake_case geolevel() geodimension() functions. Delete parameter use_intermediate_projected_crs function complete_point_geometry(). Delete parameter surrogate_key function get_level_layer(). Include detailed error messages. New tests.","code":""},{"path":"https://josesamos.github.io/geodimension/news/index.html","id":"geodimension-102","dir":"Changelog","previous_headings":"","what":"geodimension 1.0.2","title":"geodimension 1.0.2","text":"CRAN release: 2023-12-02 Fix test problem. Use core pipe operator tests. Use st_shift_longitude function plot map US Alaska.","code":""},{"path":"https://josesamos.github.io/geodimension/news/index.html","id":"geodimension-102-1","dir":"Changelog","previous_headings":"","what":"geodimension 1.0.2","title":"geodimension 1.0.2","text":"CRAN release: 2023-12-02 Fix test problem. Use core pipe operator tests. Use st_shift_longitude function plot map US Alaska.","code":""},{"path":"https://josesamos.github.io/geodimension/news/index.html","id":"geodimension-101","dir":"Changelog","previous_headings":"","what":"geodimension 1.0.1","title":"geodimension 1.0.1","text":"CRAN release: 2023-10-05 Update documentation website. Use core pipe operator.","code":""},{"path":"https://josesamos.github.io/geodimension/news/index.html","id":"geodimension-100","dir":"Changelog","previous_headings":"","what":"geodimension 1.0.0","title":"geodimension 1.0.0","text":"CRAN release: 2020-11-27 Initial functionality. Functions define levels dimension geographic information. Functions define relationships levels. Functions obtaining tables layers.","code":""}]
