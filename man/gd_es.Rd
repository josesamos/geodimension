% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\docType{data}
\name{gd_es}
\alias{gd_es}
\title{\code{gd_es}}
\format{
A \code{geodimension}.
}
\source{
\url{https://centrodedescargas.cnig.es/CentroDescargas/},
\url{https://www.mapa.gob.es/es/cartografia-y-sig/ide/descargas/agricultura/default.aspx}
}
\usage{
gd_es
}
\description{
\code{geodimension} obtained from vector layers over Spain
}
\details{
It includes the levels nucleus, municipality, agricultural region, province,
autonomous community and country.
}
\examples{
# Defined by:

file <-
  system.file("extdata", "es_layers.gpkg", package = "geodimension")
layer_es_nucleus <-
  sf::st_read(file, layer = "nucleus", quiet = TRUE)
layer_es_municipality <-
  sf::st_read(file, layer = "municipality", quiet = TRUE)
layer_es_agricultural_region <-
  sf::st_read(file, layer = "agricultural_region", quiet = TRUE)
layer_es_province <-
  sf::st_read(file, layer = "province", quiet = TRUE)
layer_es_autonomous_community <-
  sf::st_read(file, layer = "autonomous_community", quiet = TRUE)

layer_es_nucleus$municipio <- substr(layer_es_nucleus$codine, 1, 5)
layer_es_nucleus$provincia <- substr(layer_es_nucleus$codine, 1, 2)
layer_es_nucleus <-
  layer_es_nucleus[layer_es_nucleus$provincia <= "52",]
nucleus <-
  geolevel(
    name = "nucleus",
    layer = layer_es_nucleus,
    attributes = c("provincia", "municipio", "codine", "nombre", "tipo"),
    key = "idpob"
  )

layer_es_municipality$municipio <-
  substr(layer_es_municipality$NATCODE, 7, 11)
layer_es_municipality$provincia <-
  substr(layer_es_municipality$NATCODE, 7, 8)
layer_es_municipality <-
  layer_es_municipality[layer_es_municipality$provincia <= "52",]

municipality <-
  geolevel(
    name = "municipality",
    layer = layer_es_municipality,
    attributes = c("provincia", "municipio", "NAMEUNIT", "CODNUT3", "NATCODE"),
    key = "municipio"
  ) |>
  complete_point_geometry()

layer_es_agricultural_region$CO_PROVINC <-
  sprintf("\%02d", layer_es_agricultural_region$CO_PROVINC)
layer_es_agricultural_region$CO_COMARCA <-
  sprintf("\%05d", layer_es_agricultural_region$CO_COMARCA)

agricultural_region <-
  geolevel(
    name = "agricultural_region",
    layer = layer_es_agricultural_region,
    attributes = c("CO_PROVINC", "CO_COMARCA", "DS_COMARCA"),
    key = c("CO_PROVINC", "CO_COMARCA", "DS_COMARCA")
  ) |>
  complete_point_geometry()

layer_es_province$provincia <-
  substr(layer_es_province$NATCODE, 5, 6)
layer_es_province <-
  layer_es_province[layer_es_province$provincia <= "52",]
layer_es_province$ca <- substr(layer_es_province$NATCODE, 3, 4)

province <-
  geolevel(
    name = "province",
    layer = layer_es_province,
    attributes = c("COUNTRY", "ca", "NAMEUNIT", "CODNUT2", "NATCODE"),
    key = "provincia"
  ) |>
  complete_point_geometry()

layer_es_autonomous_community$ca <-
  substr(layer_es_autonomous_community$NATCODE, 3, 4)
layer_es_autonomous_community <-
  layer_es_autonomous_community[layer_es_autonomous_community$ca <= "19",]

autonomous_community <-
  geolevel(
    name = "autonomous_community",
    layer = layer_es_autonomous_community,
    attributes = c("COUNTRY", "ca", "NAMEUNIT", "CODNUT2", "NATCODE"),
    key = "ca"
  ) |>
  complete_point_geometry()
country <-
  geolevel(
    name = "country",
    layer = get_level_layer(autonomous_community),
    attributes = "COUNTRY",
    key = "COUNTRY"
  ) |>
  complete_point_geometry()

gd_es <-
  geodimension(name = "gd_es",
               level = nucleus,
               snake_case = TRUE) |>
  add_level(level = municipality) |>
  add_level(level = agricultural_region) |>
  add_level(level = province) |>
  add_level(level = autonomous_community) |>
  add_level(level = country)

gd_es <- gd_es |>
  relate_levels(
    lower_level_name = "nucleus",
    lower_level_attributes = "municipio",
    upper_level_name = "municipality"
  )

gd_es <- gd_es |>
  relate_levels(
    lower_level_name = "municipality",
    lower_level_attributes = "provincia",
    upper_level_name = "province"
  )

gd_es <- gd_es |>
  relate_levels(
    lower_level_name = "municipality",
    upper_level_name = "agricultural_region",
    by_geography = TRUE
  )

ui <- gd_es |>
  get_unrelated_instances(
    lower_level_name = "municipality",
    upper_level_name = "agricultural_region"
  )

gd_es <- gd_es |>
  relate_levels(
    lower_level_name = "agricultural_region",
    lower_level_attributes = "CO_PROVINC",
    upper_level_name = "province"
  )

gd_es <- gd_es |>
  relate_levels(
    lower_level_name = "province",
    lower_level_attributes = "ca",
    upper_level_name = "autonomous_community"
  )

gd_es <- gd_es |>
  relate_levels(
    lower_level_name = "autonomous_community",
    lower_level_attributes = "country",
    upper_level_name = "country"
  )

}
\keyword{datasets}
